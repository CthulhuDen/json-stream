name:                json-stream
version:             0.1.0.0
synopsis:            Incremental applicative JSON parser
description:         Easy to use JSON parser fully supporting incremental parsing.
                     Parsing rule is specified simply using a few functions in
                     applicative form without any need for TemplateHaskell.

                     Although the parser is applicative, it is compatibile with
                     aeson and its FromJSON class (in fact, json-stream internally
                     parses the values into aeson types). It is perfectly possible
                     to use aeson monadic parsing for parts of the parsing tree.

                     The parser supports incremental parsing while using as little
                     memory as possible.

homepage:            https://github.com/ondrap/json-stream
license:             BSD3
license-file:        LICENSE
author:              Ondrej Palkovsky
maintainer:          palkovsky.ondrej@gmail.com
category:            Text, JSON
build-type:          Simple
cabal-version:       >=1.10

source-repository head
  type: git
  location: https://github.com/ondrap/json-stream.git

library
  exposed-modules:     Data.JsonStream.Parser
  other-modules:       Data.JsonStream.TokenParser
  build-depends:         base >=4.7 && <4.8
                       , bytestring
                       , text
                       , aeson
                       , vector
                       , unordered-containers
                       , hspec
                       , scientific
  default-language:    Haskell2010

test-suite spec
  main-is:             Spec.hs
  type:                exitcode-stdio-1.0
  hs-source-dirs:      test, .
  default-language:    Haskell2010
  build-depends:         base >=4.7 && <4.8
                       , bytestring
                       , text
                       , aeson
                       , vector
                       , unordered-containers
                       , hspec
